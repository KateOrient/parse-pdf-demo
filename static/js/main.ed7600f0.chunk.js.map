{"version":3,"sources":["components/PdfPage.js","components/Header.js","App.js","serviceWorker.js","index.js","files/demo_tags.pdf","../node_modules/pdfjs-dist/build sync","files/test_2.pdf","files/test.pdf","files/huge.pdf","files/test_page_tree_depth_2.pdf","files/test_with_graphics.pdf"],"names":["PdfPage","pageIndex","onPageRenderSuccess","className","pageNumber","renderAnnotationLayer","renderInteractiveForms","renderTextLayer","onRenderSuccess","customTextRenderer","height","width","transform","scale","page","str","disabledSize","Header","props","uploadInputRef","uploadTestPdf","size","file","testPdf","mediumPdf","bigPdf","hugePdf","testWithPageTreeDepth2","testWithGraphics","e","onUploadSctrictFile","app-btn-pane","onClick","disabled","loading","click","type","onChange","onUploadFile","ref","node","style","pdfjs","GlobalWorkerOptions","workerSrc","refs","containerRef","activeTagName","tagPath","loadedPages","App","onDocumentLoadSuccess","document","console","log","structureTree","_pdfInfo","getMetadata","then","info","RoleMap","metadata","contentDispositionFilename","ClassMap","title","Title","state","pdf","name","setState","roleMap","classMap","numPages","getOperatorList","data","positionData","argsArray","length","bboxByPage","rect","getElementsByTagName","getBoundingClientRect","bboxCanvas","createElement","top","y","left","x","position","id","setAttribute","appendChild","ctx","getContext","translate","onmousemove","onBboxMove","findTag","mcid","result","_","cloneDeep","parent","path","Array","forEach","child","Object","hasOwnProperty","keys","childKey","relatives","flattenDeep","findChildren","filter","el","map","canvas","target","clientX","offsetHeight","clientY","getAttribute","bboxList","clearRect","offsetWidth","strokeStyle","bboxCoords","isInBbox","parseInt","tagRoleMapPath","minX","Number","MAX_VALUE","maxX","minY","maxY","index","elementMcid","isNaN","isNull","strokeRect","fillDocData","join","tagName","EMPTY","textContent","classList","remove","add","isInteger","files","reader","FileReader","onload","onUploadEnd","readAsArrayBuffer","getElementById","innerHTML","onError","error","message","boundingBoxes","renderedPages","this","pagesArray","push","key","bbox","isX","isY","onLoadSuccess","options","cMapUrl","version","cMapPacked","onLoadError","getPages","setRef","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports","webpackEmptyContext","req","Error","code","resolve"],"mappings":"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","file":"static/js/main.ed7600f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Page } from \"react-pdf\";\r\n\r\nfunction PdfPage({ pageIndex, onPageRenderSuccess }) {\r\n    return (\r\n        <Page className=\"pdf-page\"\r\n              pageNumber={pageIndex}\r\n              renderAnnotationLayer={true}\r\n              renderInteractiveForms={true}\r\n              renderTextLayer={true}\r\n              onRenderSuccess={onPageRenderSuccess}\r\n              customTextRenderer={({height,  width, transform, scale, page, str}) => {\r\n                  /*\r\n                  height: height of text\r\n                  width: width of text\r\n                  transform: contain coordinates of text\r\n                  scale: will be used for coords. conversing\r\n                   */\r\n                  return str;\r\n              }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PdfPage;\r\n","import React from 'react';\r\n\r\nimport testPdf from '../files/demo_tags.pdf';\r\nimport mediumPdf from '../files/test_2.pdf';\r\nimport bigPdf from '../files/test.pdf';\r\nimport hugePdf from '../files/huge.pdf';\r\nimport testWithPageTreeDepth2 from '../files/test_page_tree_depth_2.pdf';\r\nimport testWithGraphics from '../files/test_with_graphics.pdf';\r\n\r\nlet disabledSize = 'small';\r\n\r\nfunction Header(props) {\r\n    let uploadInputRef;\r\n    function setUploadInputRef(node) {\r\n        uploadInputRef = node;\r\n    }\r\n\r\n    function onUploadPdfClick() {\r\n        uploadInputRef.click();\r\n    }\r\n\r\n    function uploadTestPdf(size) {\r\n        let file;\r\n        switch (size) {\r\n            case 'small':\r\n                file = testPdf;\r\n                break;\r\n            case 'medium':\r\n                file = mediumPdf;\r\n                break;\r\n            case 'big':\r\n                file = bigPdf;\r\n                break;\r\n            case 'huge':\r\n                file = hugePdf;\r\n                break;\r\n            case 'testWithPageTreeDepth2':\r\n                file = testWithPageTreeDepth2;\r\n                break;\r\n            case 'testWithGraphics':\r\n                file = testWithGraphics;\r\n                break;\r\n        }\r\n\r\n        return (e) => {\r\n            disabledSize = size;\r\n            props.onUploadSctrictFile(file);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <section className=\"\"app-btn-pane>\r\n                <button onClick={uploadTestPdf('small')} className=\"app-btn\" disabled={disabledSize === 'small' || props.loading}>\r\n                    Small pdf\r\n                </button>\r\n                <button onClick={uploadTestPdf('medium')} className=\"app-btn\" disabled={disabledSize === 'medium' || props.loading}>\r\n                    Medium pdf\r\n                </button>\r\n                <button onClick={uploadTestPdf('big')} className=\"app-btn\" disabled={disabledSize === 'big' || props.loading}>\r\n                    Big pdf\r\n                </button>\r\n                <button onClick={uploadTestPdf('huge')} className=\"app-btn\" disabled={disabledSize === 'huge' || props.loading}>\r\n                    Huge pdf\r\n                </button>\r\n                <button onClick={uploadTestPdf('testWithPageTreeDepth2')} className=\"app-btn\" disabled={disabledSize === 'testWithPageTreeDepth2' || props.loading}>\r\n                    Pdf with page tree depth of 2\r\n                </button>\r\n                <button onClick={uploadTestPdf('testWithGraphics')} className=\"app-btn\" disabled={disabledSize === 'testWithGraphics' || props.loading}>\r\n                    Pdf with graphics\r\n                </button>\r\n                <button onClick={onUploadPdfClick} className=\"app-btn\" disabled={props.loading}>\r\n                    Upload other pdf\r\n                </button>\r\n                <input type='file' onChange={props.onUploadFile} ref={setUploadInputRef} style={{'display': 'none'}}/>\r\n            </section>\r\n            <div className=\"pdf-loading\">\r\n                {props.loading ? 'Loading pdf...' : ''}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Document, pdfjs} from 'react-pdf';\r\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\r\nimport testPdf from './files/demo_tags.pdf';\r\nimport _ from 'lodash';\r\n\r\nimport PdfPage from './components/PdfPage';\r\nimport Header from './components/Header';\r\nimport './scss/main.scss';\r\n\r\n//  Set pdf.js build\r\npdfjs.GlobalWorkerOptions.workerSrc = `pdf.worker.js`;\r\n//pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nlet refs = {\r\n    containerRef: null,\r\n    activeTagName: null,\r\n    tagPath: null,\r\n};\r\n\r\nlet loadedPages = 0;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numPages: null,\r\n            pageNumber: 1,\r\n            pdf: testPdf,\r\n            title: testPdf.name,\r\n            boundingBoxes: null,\r\n            renderedPages: 0,\r\n            error: null,\r\n            structureTree: {},\r\n            roleMap: {},\r\n            classMap: {},\r\n            loading: true,\r\n            bboxByPage: {},\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.renderedPages === this.state.numPages) {\r\n            console.log('BBoxes', this.state.boundingBoxes);\r\n            this.setState({renderedPages: 0});\r\n        }\r\n    }\r\n\r\n    //  Init data of uploaded PDF\r\n    onDocumentLoadSuccess = (document) => {\r\n        console.log(document);\r\n        let structureTree = document._pdfInfo.structureTree || {};\r\n        document.getMetadata().then(({info, metadata, contentDispositionFilename,}) => {\r\n            let {RoleMap, ClassMap, Title} = info;\r\n            let title = Title || this.state.pdf.name;\r\n            this.setState({\r\n                title,\r\n                structureTree,\r\n                roleMap: RoleMap || {},\r\n                classMap: ClassMap || {},\r\n            })\r\n        });\r\n        let {numPages} = document;\r\n        this.setState({numPages});\r\n    };\r\n\r\n    //  Create page overlay for BBOXes\r\n    onPageRenderSuccess = (page) => {\r\n        page.getOperatorList().then((data) => {\r\n            let positionData = data.argsArray[data.argsArray.length - 1];\r\n            let bboxByPage = {...this.state.bboxByPage};\r\n            bboxByPage[page.pageIndex] = positionData || {};\r\n            console.log('Data:', positionData);\r\n\r\n            let canvas = document.getElementsByTagName('canvas')[page.pageIndex];\r\n            let rect = canvas.getBoundingClientRect();\r\n\r\n            let bboxCanvas = document.createElement('canvas');\r\n            bboxCanvas.style.top = rect.y + 'px';\r\n            bboxCanvas.style.left = rect.x + 'px';\r\n            bboxCanvas.style.height = rect.height + 'px';\r\n            bboxCanvas.style.width = rect.width + 'px';\r\n            bboxCanvas.height = rect.height;\r\n            bboxCanvas.width = rect.width;\r\n            bboxCanvas.style.position = 'absolute';\r\n            bboxCanvas.id = 'bboxCanvas' + page.pageIndex;\r\n            bboxCanvas.setAttribute('data-page', page.pageIndex);\r\n            refs.containerRef.appendChild(bboxCanvas);\r\n            let ctx = bboxCanvas.getContext('2d');\r\n            ctx.translate(0, rect.height);   // reset where 0,0 is located\r\n            ctx.scale(1, -1);\r\n\r\n            bboxCanvas.onmousemove = this.onBboxMove;\r\n\r\n            loadedPages++;\r\n            if (loadedPages === this.state.numPages) {\r\n                this.setState({\r\n                    loading: false,\r\n                    bboxByPage,\r\n                });\r\n            } else {\r\n                this.state.bboxByPage = bboxByPage;\r\n            }\r\n        });\r\n    }\r\n\r\n    //  Build pages\r\n    getPages() {\r\n        let pagesArray = [];\r\n        let {numPages} = this.state;\r\n\r\n        for (let pageIndex = 1; pageIndex <= numPages; pageIndex++) {\r\n            pagesArray.push(\r\n                <PdfPage pageIndex={pageIndex}\r\n                         onPageRenderSuccess={this.onPageRenderSuccess}\r\n                         key={\"page-\" + pageIndex}\r\n                />\r\n            );\r\n        }\r\n\r\n        return pagesArray;\r\n    }\r\n\r\n    /*\r\n     * Get tag name of hovered bbox\r\n     * @param mcid {integer} id of bbox\r\n     * @param pageIndex {integer} tough pageIndex prevent confusing of wrong tag with similar mcid\r\n     * @param node {object} structure for searching\r\n     * @param parent {object} parent object for current node\r\n     * @param path {array} tree path for current node\r\n     *\r\n     * @return {\r\n     *      path {string} path to component through structure tree\r\n     *      relatives {array} tags from the same level\r\n     * }\r\n     */\r\n    findTag = (mcid, pageIndex, node = _.cloneDeep(this.state.structureTree), parent = null, path = []) => {\r\n        if (node instanceof Array) {\r\n            let result;\r\n            node.forEach(child => {\r\n                if (child) {\r\n                    let data = this.findTag(mcid, pageIndex, child, node, path);\r\n                    if (data) {\r\n                        result = data;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        } else if (node instanceof Object) {\r\n            if (node.hasOwnProperty('mcid') && node.hasOwnProperty('pageIndex')) { //leaf\r\n                if (node.mcid === mcid && node.pageIndex === pageIndex) {\r\n                    return {\r\n                        path,\r\n                        relatives: _.flattenDeep(this.findChildren(parent)).filter(el => el)\r\n                    }\r\n                }\r\n            } else {\r\n                let result;\r\n                Object.keys(node).forEach(childKey => {\r\n                    if (node[childKey]) {\r\n                        let data = this.findTag(mcid, pageIndex, node[childKey], node, [...path, childKey]);\r\n                        if (data) {\r\n                            result = data;\r\n                        }\r\n                    }\r\n                });\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    //Get all leafs that have node as a common root\r\n    findChildren = (node) => {\r\n        if (node === null) {\r\n            return [];\r\n        } else if (node instanceof Object) {\r\n            if (node.hasOwnProperty('mcid') && node.hasOwnProperty('pageIndex')) {\r\n                return node;\r\n            } else {\r\n                return Object.keys(node).map(childKey => {\r\n                    return this.findChildren(node[childKey]);\r\n                })\r\n            }\r\n        } else if (node instanceof Array) {\r\n            return node.map(child => this.findChildren(child));\r\n        }\r\n    };\r\n\r\n    //  Set React ref\r\n    setRef(target) {\r\n        return (node) => {\r\n            refs[target] = node;\r\n        };\r\n    }\r\n\r\n    isInBbox({x, y, bboxList}) {\r\n        let bbox = false;\r\n        Object.keys(bboxList).forEach((key) => {\r\n            let isX = x >= bboxList[key].x && x <= (bboxList[key].x + bboxList[key].width);\r\n            let isY = y >= bboxList[key].y && y <= (bboxList[key].y + bboxList[key].height);\r\n\r\n            if (isX && isY) {\r\n                bbox = {\r\n                    ...bboxList[key],\r\n                    mcid: key,\r\n                };\r\n            }\r\n        });\r\n\r\n        return bbox;\r\n    }\r\n\r\n    /*\r\n    *   HANDLERS\r\n    */\r\n\r\n    onBboxMove = (e) => {\r\n        let canvas = e.target;\r\n        let rect = canvas.getBoundingClientRect();\r\n        let x = e.clientX - rect.left;\r\n        let y = canvas.offsetHeight - (e.clientY - rect.top);\r\n        let ctx = canvas.getContext('2d');\r\n        let pageIndex = canvas.getAttribute('data-page');\r\n        let bboxList = this.state.bboxByPage[pageIndex];\r\n\r\n        ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\r\n        ctx.strokeStyle = 'red';\r\n        let bboxCoords = this.isInBbox({x, y, bboxList});\r\n        if (!bboxCoords) {\r\n            this.fillDocData();\r\n            return;\r\n        }\r\n\r\n        let mcid = parseInt(bboxCoords.mcid);\r\n        let result = this.findTag(mcid, +pageIndex);\r\n        if (result) {\r\n            let path = result.path;\r\n            let relatives = result.relatives.filter(el => el.pageIndex === +pageIndex);\r\n            let tagRoleMapPath = '';\r\n            let minX = Number.MAX_VALUE;\r\n            let maxX = 0;\r\n            let minY = Number.MAX_VALUE;\r\n            let maxY = 0;\r\n            relatives.forEach(({mcid: elementMcid, pageIndex: page}, index) => {\r\n                if (+pageIndex !== page || !bboxList[elementMcid]) return;\r\n                let {x, y, width, height} = bboxList[elementMcid];\r\n                if (_.isNaN(x) || _.isNaN(y) || _.isNaN(width) || _.isNaN(height) ||\r\n                    _.isNull(x) || _.isNull(y) || _.isNull(width) || _.isNull(height)) return;\r\n                if (!index) {\r\n                    minX = x;\r\n                    maxX = x + width;\r\n                    minY = y;\r\n                    maxY = y + height;\r\n                }\r\n\r\n                minX = minX < x ? minX : x;\r\n                maxX = maxX > (x + width) ? maxX : (x + width);\r\n                minY = minY < y ? minY : y;\r\n                maxY = maxY > (y + height) ? maxY : (y + height);\r\n            });\r\n\r\n            ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\r\n\r\n            if (this.state.roleMap[path[path.length - 1]]) {\r\n                tagRoleMapPath = '-> ' + this.state.roleMap[path[path.length - 1]].name;\r\n            }\r\n\r\n            this.fillDocData(`${path[path.length - 1]} ${tagRoleMapPath}`, path.join(' -> '), mcid);\r\n        } else {\r\n            ctx.strokeRect(bboxCoords.x, bboxCoords.y, bboxCoords.width, bboxCoords.height);\r\n        }\r\n    };\r\n\r\n    fillDocData = (tagName = null, tagPath = null, mcid = null) => {\r\n        const EMPTY = 'None';\r\n\r\n        if (tagName) {\r\n            refs.activeTagName.textContent = tagName;\r\n            refs.tagPath.classList.remove('_empty');\r\n        } else {\r\n            refs.activeTagName.textContent = EMPTY;\r\n            refs.tagPath.classList.add('_empty');\r\n        }\r\n\r\n        if (tagPath) {\r\n            refs.tagPath.textContent = tagPath;\r\n            refs.activeTagName.classList.remove('_empty');\r\n        } else {\r\n            refs.tagPath.textContent = EMPTY;\r\n            refs.activeTagName.classList.add('_empty');\r\n        }\r\n\r\n        if (Number.isInteger(mcid)) {\r\n            refs.mcid.textContent = mcid;\r\n            refs.mcid.classList.remove('_empty');\r\n        } else {\r\n            refs.mcid.textContent = EMPTY;\r\n            refs.mcid.classList.add('_empty');\r\n        }\r\n    };\r\n\r\n    onUploadFile = (e) => {\r\n        loadedPages = 0;\r\n        this.setState({\r\n            loading: true,\r\n            bboxByPage: {},\r\n        });\r\n        let file = e.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = this.onUploadEnd(file);\r\n\r\n        if (!file) {\r\n            this.setState({\r\n                pdf: null,\r\n                loading: false,\r\n            });\r\n            return;\r\n        }\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    onUploadSctrictFile = (pdf) => {\r\n        loadedPages = 0;\r\n        this.setState({\r\n            loading: true,\r\n            bboxByPage: {},\r\n        });\r\n        this.onUploadEnd(pdf);\r\n    }\r\n\r\n    onUploadEnd = (pdf) => {\r\n        document.getElementById('container').innerHTML = \"\";\r\n\r\n        this.setState({\r\n            numPages: null,\r\n            pageNumber: 1,\r\n            pdf,\r\n        })\r\n    }\r\n\r\n    onError = (e) => {\r\n        this.setState({\r\n            error: e.message,\r\n            loading: false,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {numPages, title, loading} = this.state;\r\n        return (\r\n            <div className={`App ${loading ? '_loading' : ''}`}>\r\n                <Header onUploadFile={this.onUploadFile} onUploadSctrictFile={this.onUploadSctrictFile}\r\n                        loading={loading}/>\r\n                <main className=\"app-main-body\">\r\n                    <div className=\"pdf-wrapper\">\r\n                        <Document file={this.state.pdf}\r\n                                  onLoadSuccess={this.onDocumentLoadSuccess}\r\n                                  options={{\r\n                                      cMapUrl: `//cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}/cmaps/`,\r\n                                      cMapPacked: true,\r\n                                  }}\r\n                                  onLoadError={this.onError}\r\n                                  error={<div className=\"error-msg\">{this.state.error}</div>}\r\n                        >\r\n                            {this.getPages()}\r\n                        </Document>\r\n                    </div>\r\n                </main>\r\n                <div id=\"container\" ref={this.setRef('containerRef')}/>\r\n                <div id=\"tagInfo\">\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Document title</div>\r\n                        <div ref={this.setRef('activeTagName')}\r\n                             className={title ? '' : '_empty'}>{title || 'None'}</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Number of pages</div>\r\n                        <div ref={this.setRef('activeTagName')}>{numPages}</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Tag name</div>\r\n                        <div ref={this.setRef('activeTagName')} className=\"_empty\">None</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Tree path</div>\r\n                        <div ref={this.setRef('tagPath')} className=\"_empty\">None</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">MCID</div>\r\n                        <div ref={this.setRef('mcid')} className=\"_empty\">None</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/demo_tags.a5053dd1.pdf\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/test_2.abc38450.pdf\";","module.exports = __webpack_public_path__ + \"static/media/test.ba02e324.pdf\";","module.exports = __webpack_public_path__ + \"static/media/huge.6e4e83bb.pdf\";","module.exports = __webpack_public_path__ + \"static/media/test_page_tree_depth_2.4d676eff.pdf\";","module.exports = __webpack_public_path__ + \"static/media/test_with_graphics.dddd5405.pdf\";"],"sourceRoot":""}