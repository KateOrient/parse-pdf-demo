{"version":3,"sources":["components/PdfPage.js","components/Header.js","App.js","serviceWorker.js","index.js","files/Default_sample.pdf","../node_modules/pdfjs-dist/build sync","files/STEM_Sample.pdf","files/Det_is_Berlin.pdf","files/Book_catalog.pdf","files/PDFUA-Reference-03_(Danish_Association-event).pdf","files/Nutshell.pdf"],"names":["PdfPage","pageIndex","onPageRenderSuccess","className","pageNumber","renderAnnotationLayer","renderInteractiveForms","renderTextLayer","onRenderSuccess","customTextRenderer","height","width","transform","scale","page","str","availableSamples","title","file","Default_sample","STEM_Sample","Det_is_Berlin","Book_catalog","PDFUA_Reference","Nutshell","selectedFileIndex","Header","props","uploadInputRef","uploadTestPdf","sample","_","findIndex","onUploadSampleFile","map","index","onClick","key","disabled","loading","click","type","onChange","onUploadFile","ref","node","style","pdfjs","GlobalWorkerOptions","workerSrc","refs","containerRef","activeTagName","tagPath","loadedPages","App","getBoundingBoxesFromTree","tagsData","cloneDeep","state","structureTree","parent","path","Array","forEach","child","Object","hasOwnProperty","bbox","getBoundingBoxForChildren","push","mcid","el_bbox","bboxByPage","x","Math","min","rect","y","abs","children","name","uniteBoundingBoxes","newBoundingBox","oldBoundingBox","isNil","max","currentBbox","isNaN","keys","childKey","onDocumentLoadSuccess","document","console","log","_pdfInfo","getMetadata","then","info","RoleMap","metadata","contentDispositionFilename","ClassMap","Title","pdf","setState","roleMap","classMap","numPages","getOperatorList","data","positionData","argsArray","length","getElementsByTagName","getBoundingClientRect","bboxCanvas","createElement","top","left","position","id","setAttribute","appendChild","ctx","getContext","translate","onmousemove","onBboxMove","e","canvas","target","clientX","offsetHeight","clientY","getAttribute","tagsDataByPage","clearRect","offsetWidth","strokeStyle","tagData","find","strokeRect","fillDocData","join","tagName","EMPTY","textContent","classList","remove","add","Number","isInteger","files","reader","FileReader","onload","onUploadEnd","readAsArrayBuffer","getElementById","innerHTML","onError","error","message","defaultSample","boundingBoxes","renderedPages","this","pagesArray","onLoadSuccess","options","cMapUrl","version","cMapPacked","onLoadError","getPages","setRef","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports","webpackEmptyContext","req","Error","code","resolve"],"mappings":"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","file":"static/js/main.26fd3474.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Page } from \"react-pdf\";\r\n\r\nfunction PdfPage({ pageIndex, onPageRenderSuccess }) {\r\n    return (\r\n        <Page className=\"pdf-page\"\r\n              pageNumber={pageIndex}\r\n              renderAnnotationLayer={true}\r\n              renderInteractiveForms={true}\r\n              renderTextLayer={true}\r\n              onRenderSuccess={onPageRenderSuccess}\r\n              customTextRenderer={({height,  width, transform, scale, page, str}) => {\r\n                  /*\r\n                  height: height of text\r\n                  width: width of text\r\n                  transform: contain coordinates of text\r\n                  scale: will be used for coords. conversing\r\n                   */\r\n                  return str;\r\n              }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PdfPage;\r\n","import React from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport Default_sample from '../files/Default_sample.pdf';\r\nimport STEM_Sample from '../files/STEM_Sample.pdf';\r\nimport Det_is_Berlin from '../files/Det_is_Berlin.pdf';\r\nimport Book_catalog from '../files/Book_catalog.pdf';\r\nimport PDFUA_Reference from '../files/PDFUA-Reference-03_(Danish_Association-event).pdf';\r\nimport Nutshell from '../files/Nutshell.pdf';\r\n\r\n\r\nlet availableSamples = [\r\n    {\r\n        title: 'Default sample',\r\n        file: Default_sample\r\n    },\r\n    {\r\n        title: 'STEM Sample',\r\n        file: STEM_Sample\r\n    },\r\n    {\r\n        title: 'Det is Berlin',\r\n        file: Det_is_Berlin\r\n    },\r\n    {\r\n        title: 'Book catalog',\r\n        file: Book_catalog\r\n    },\r\n    {\r\n        title: 'PDF/UA Reference',\r\n        file: PDFUA_Reference\r\n    },\r\n    {\r\n        title: 'Nutshell',\r\n        file: Nutshell\r\n    }\r\n];\r\n\r\nlet selectedFileIndex = 0;\r\n\r\nfunction Header(props) {\r\n    let uploadInputRef;\r\n\r\n    function setUploadInputRef(node) {\r\n        uploadInputRef = node;\r\n    }\r\n\r\n    function onUploadPdfClick() {\r\n        selectedFileIndex = null;\r\n        uploadInputRef.click();\r\n    }\r\n\r\n    function uploadTestPdf(sample) {\r\n        return () => {\r\n            selectedFileIndex = _.findIndex(availableSamples, sample);\r\n            props.onUploadSampleFile(sample.file);\r\n        };\r\n    }\r\n\r\n    function renderSampleButtons() {\r\n        return _.map(availableSamples, (sample, index) => (\r\n            <button onClick={uploadTestPdf(sample)} className=\"app-btn\" key={index}\r\n                    disabled={index === selectedFileIndex || props.loading}>\r\n                {sample.title}\r\n            </button>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <section className=\"app-btn-pane\">\r\n                {renderSampleButtons()}\r\n                <button onClick={onUploadPdfClick} className=\"app-btn\" disabled={props.loading}>\r\n                    Upload other pdf\r\n                </button>\r\n                <input type='file' onChange={props.onUploadFile} ref={setUploadInputRef} style={{'display': 'none'}}/>\r\n            </section>\r\n            <div className=\"pdf-loading\">\r\n                {props.loading ? 'Loading pdf...' : ''}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Document, pdfjs} from 'react-pdf';\r\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\r\nimport defaultSample from './files/Default_sample.pdf';\r\nimport _ from 'lodash';\r\n\r\nimport PdfPage from './components/PdfPage';\r\nimport Header from './components/Header';\r\nimport './scss/main.scss';\r\n\r\n//  Set pdf.js build\r\npdfjs.GlobalWorkerOptions.workerSrc = `pdf.worker.js`;\r\n//pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nlet refs = {\r\n    containerRef: null,\r\n    activeTagName: null,\r\n    tagPath: null,\r\n};\r\n\r\nlet loadedPages = 0;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numPages: null,\r\n            pageNumber: 1,\r\n            pdf: defaultSample,\r\n            title: defaultSample.name,\r\n            boundingBoxes: null,\r\n            renderedPages: 0,\r\n            error: null,\r\n            structureTree: {},\r\n            roleMap: {},\r\n            classMap: {},\r\n            loading: true,\r\n            bboxByPage: {},\r\n            tagsData: null\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.renderedPages === this.state.numPages) {\r\n            console.log('BBoxes', this.state.boundingBoxes);\r\n            this.setState({renderedPages: 0});\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Calculate bounding boxes by pages\r\n     * @param tagData {array} array of bounding boxes for pages in which all data is stored\r\n     * @param node {object} current structure element\r\n     * @param parent {object} parent object for current node\r\n     * @param path {array} tree path for current node\r\n     */\r\n    getBoundingBoxesFromTree = (tagsData, node = _.cloneDeep(this.state.structureTree), parent = null, path = []) => {\r\n        if (node instanceof Array) {\r\n            node.forEach(child => {\r\n                if (child) {\r\n                    this.getBoundingBoxesFromTree(tagsData, child, node, path);\r\n                }\r\n            });\r\n        } else if (node instanceof Object) {\r\n            if (node.hasOwnProperty('mcid') && node.hasOwnProperty('pageIndex')) { //leaf that has corresponding MCS at the stream\r\n                let bbox = null;\r\n                bbox = this.getBoundingBoxForChildren(parent, node.pageIndex);\r\n                if (!tagsData.hasOwnProperty(node.pageIndex)) {\r\n                    tagsData[node.pageIndex] = [];\r\n                }\r\n                tagsData[node.pageIndex].push({\r\n                    mcid: node.mcid,\r\n                    el_bbox: this.state.bboxByPage[node.pageIndex][node.mcid],\r\n                    bbox: bbox,\r\n                    path: path\r\n                });\r\n            } else if (node.hasOwnProperty('rect') && node.hasOwnProperty('pageIndex')) { //leaf that is Obj and has no corresponding MCS at the stream\r\n                if (!tagsData.hasOwnProperty(node.pageIndex)) {\r\n                    tagsData[node.pageIndex] = [];\r\n                }\r\n                let bbox = {\r\n                    x: Math.min(node.rect[0], node.rect[2]),\r\n                    y: Math.min(node.rect[1], node.rect[3]),\r\n                    width: Math.abs(node.rect[0] - node.rect[2]),\r\n                    height: Math.abs(node.rect[1] - node.rect[3])\r\n                };\r\n                tagsData[node.pageIndex].push({\r\n                    pageIndex: node.pageIndex,\r\n                    el_bbox: bbox,\r\n                    bbox: bbox,\r\n                    path: path\r\n                });\r\n            } else if (node.hasOwnProperty('name') && node.hasOwnProperty('children')) {\r\n                this.getBoundingBoxesFromTree(tagsData, node.children, node, [...path, node.name]);\r\n            }\r\n        }\r\n    };\r\n\r\n    uniteBoundingBoxes = (newBoundingBox, oldBoundingBox) => {\r\n        if (_.isNil(newBoundingBox)) {\r\n            return oldBoundingBox;\r\n        } else if (_.isNil(oldBoundingBox)) {\r\n            return _.cloneDeep(newBoundingBox);\r\n        } else {\r\n            return {\r\n                x: Math.min(newBoundingBox.x, oldBoundingBox.x),\r\n                y: Math.min(newBoundingBox.y, oldBoundingBox.y),\r\n                width: Math.max(newBoundingBox.x + newBoundingBox.width, oldBoundingBox.x + oldBoundingBox.width) - Math.min(newBoundingBox.x, oldBoundingBox.x),\r\n                height: Math.max(newBoundingBox.y + newBoundingBox.height, oldBoundingBox.y + oldBoundingBox.height) - Math.min(newBoundingBox.y, oldBoundingBox.y)\r\n            };\r\n        }\r\n    };\r\n\r\n    //Get bounding boxes for elements at the same level\r\n    getBoundingBoxForChildren = (node, pageIndex) => {\r\n        if (node instanceof Array) {\r\n            let bbox = null;\r\n            node.map(child => bbox = this.uniteBoundingBoxes(this.getBoundingBoxForChildren(child, pageIndex), bbox));\r\n            return bbox;\r\n        } else if (node instanceof Object) {\r\n            if (node.hasOwnProperty('mcid') && node.hasOwnProperty('pageIndex')) {\r\n                let currentBbox = this.state.bboxByPage[node.pageIndex][node.mcid];\r\n                if (!_.isNil(currentBbox) && !_.isNaN(currentBbox.x) && !_.isNaN(currentBbox.y)\r\n                    && !_.isNaN(currentBbox.width) && !_.isNaN(currentBbox.height) && node.pageIndex === pageIndex) {\r\n                    return currentBbox;\r\n                }\r\n                return null;\r\n            } else {\r\n                let bbox = null;\r\n                Object.keys(node).map(childKey => {\r\n                    bbox = this.uniteBoundingBoxes(this.getBoundingBoxForChildren(node[childKey], pageIndex), bbox);\r\n                });\r\n                return bbox;\r\n            }\r\n        }\r\n    };\r\n\r\n    //  Init data of uploaded PDF\r\n    onDocumentLoadSuccess = (document) => {\r\n        console.log(document);\r\n        let structureTree = document._pdfInfo.structureTree || {};\r\n        document.getMetadata().then(({info, metadata, contentDispositionFilename,}) => {\r\n            let {RoleMap, ClassMap, Title} = info;\r\n            let title = Title || this.state.pdf.name;\r\n            this.setState({\r\n                title,\r\n                structureTree,\r\n                roleMap: RoleMap || {},\r\n                classMap: ClassMap || {},\r\n            })\r\n        });\r\n        let {numPages} = document;\r\n        this.setState({numPages});\r\n    };\r\n\r\n    //  Create page overlay for BBOXes\r\n    onPageRenderSuccess = (page) => {\r\n        page.getOperatorList().then((data) => {\r\n            let positionData = data.argsArray[data.argsArray.length - 1];\r\n            let bboxByPage = {...this.state.bboxByPage};\r\n            bboxByPage[page.pageIndex] = positionData || {};\r\n            //console.log('Data:', page.pageIndex, positionData);\r\n\r\n            let canvas = document.getElementsByTagName('canvas')[page.pageIndex];\r\n            let rect = canvas.getBoundingClientRect();\r\n\r\n            let bboxCanvas = document.createElement('canvas');\r\n            bboxCanvas.style.top = rect.y + 'px';\r\n            bboxCanvas.style.left = rect.x + 'px';\r\n            bboxCanvas.style.height = rect.height + 'px';\r\n            bboxCanvas.style.width = rect.width + 'px';\r\n            bboxCanvas.height = rect.height;\r\n            bboxCanvas.width = rect.width;\r\n            bboxCanvas.style.position = 'absolute';\r\n            bboxCanvas.id = 'bboxCanvas' + page.pageIndex;\r\n            bboxCanvas.setAttribute('data-page', page.pageIndex);\r\n            refs.containerRef.appendChild(bboxCanvas);\r\n            let ctx = bboxCanvas.getContext('2d');\r\n            ctx.translate(0, rect.height);   // reset where 0,0 is located\r\n            ctx.scale(1, -1);\r\n\r\n            bboxCanvas.onmousemove = this.onBboxMove;\r\n\r\n            loadedPages++;\r\n            if (loadedPages === this.state.numPages) {\r\n                this.setState({\r\n                    loading: false,\r\n                    bboxByPage,\r\n                }, () => {\r\n                    let tagsData = {};\r\n                    this.getBoundingBoxesFromTree(tagsData);\r\n                    console.log(tagsData);\r\n                    this.setState({tagsData});\r\n                });\r\n            } else {\r\n                this.state.bboxByPage = bboxByPage;\r\n            }\r\n        });\r\n    }\r\n\r\n    //  Build pages\r\n    getPages() {\r\n        let pagesArray = [];\r\n        let {numPages} = this.state;\r\n\r\n        for (let pageIndex = 1; pageIndex <= numPages; pageIndex++) {\r\n            pagesArray.push(\r\n                <PdfPage pageIndex={pageIndex}\r\n                         onPageRenderSuccess={this.onPageRenderSuccess}\r\n                         key={\"page-\" + pageIndex}\r\n                />\r\n            );\r\n        }\r\n\r\n        return pagesArray;\r\n    }\r\n\r\n    //  Set React ref\r\n    setRef(target) {\r\n        return (node) => {\r\n            refs[target] = node;\r\n        };\r\n    }\r\n\r\n    /*\r\n    *   HANDLERS\r\n    */\r\n\r\n    onBboxMove = (e) => {\r\n        let canvas = e.target;\r\n        let rect = canvas.getBoundingClientRect();\r\n        let x = e.clientX - rect.left;\r\n        let y = canvas.offsetHeight - (e.clientY - rect.top);\r\n        let ctx = canvas.getContext('2d');\r\n        let pageIndex = canvas.getAttribute('data-page');\r\n        let tagsDataByPage = this.state.tagsData[pageIndex];\r\n\r\n        ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\r\n        ctx.strokeStyle = 'red';\r\n\r\n        let tagData = _.find(tagsDataByPage, data => x >= data.el_bbox.x && x <= data.el_bbox.x + data.el_bbox.width &&\r\n            y >= data.el_bbox.y && y <= data.el_bbox.y + data.el_bbox.height);\r\n\r\n        if (!tagData) {\r\n            this.fillDocData();\r\n        } else {\r\n            ctx.strokeRect(tagData.bbox.x, tagData.bbox.y, tagData.bbox.width, tagData.bbox.height);\r\n            this.fillDocData(tagData.path[tagData.path.length - 1], tagData.path.join(' -> '), tagData.mcid);\r\n        }\r\n    };\r\n\r\n    fillDocData = (tagName = null, tagPath = null, mcid = null) => {\r\n        const EMPTY = 'None';\r\n\r\n        if (tagName) {\r\n            refs.activeTagName.textContent = tagName;\r\n            refs.tagPath.classList.remove('_empty');\r\n        } else {\r\n            refs.activeTagName.textContent = EMPTY;\r\n            refs.tagPath.classList.add('_empty');\r\n        }\r\n\r\n        if (tagPath) {\r\n            refs.tagPath.textContent = tagPath;\r\n            refs.activeTagName.classList.remove('_empty');\r\n        } else {\r\n            refs.tagPath.textContent = EMPTY;\r\n            refs.activeTagName.classList.add('_empty');\r\n        }\r\n\r\n        if (Number.isInteger(mcid)) {\r\n            refs.mcid.textContent = mcid;\r\n            refs.mcid.classList.remove('_empty');\r\n        } else {\r\n            refs.mcid.textContent = EMPTY;\r\n            refs.mcid.classList.add('_empty');\r\n        }\r\n    };\r\n\r\n    onUploadFile = (e) => {\r\n        loadedPages = 0;\r\n        this.setState({\r\n            loading: true,\r\n            bboxByPage: {},\r\n        });\r\n        let file = e.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = this.onUploadEnd;\r\n\r\n        if (!file) {\r\n            this.setState({\r\n                pdf: null,\r\n                loading: false,\r\n            });\r\n            return;\r\n        }\r\n        reader.readAsArrayBuffer(file);\r\n    };\r\n\r\n    onUploadSampleFile = (pdf) => {\r\n        loadedPages = 0;\r\n        this.setState({\r\n            loading: true,\r\n            bboxByPage: {},\r\n        });\r\n        this.onUploadEnd(pdf);\r\n    };\r\n\r\n    onUploadEnd = (pdf) => {\r\n        console.log(pdf);\r\n        document.getElementById('container').innerHTML = \"\";\r\n\r\n        this.setState({\r\n            numPages: null,\r\n            pageNumber: 1,\r\n            pdf,\r\n        })\r\n    };\r\n\r\n    onError = (e) => {\r\n        this.setState({\r\n            error: e.message,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {numPages, title, loading} = this.state;\r\n        return (\r\n            <div className={`App ${loading ? '_loading' : ''}`}>\r\n                <Header onUploadFile={this.onUploadFile} onUploadSampleFile={this.onUploadSampleFile}\r\n                        loading={loading}/>\r\n                <main className=\"app-main-body\">\r\n                    <div className=\"pdf-wrapper\">\r\n                        <Document file={this.state.pdf}\r\n                                  onLoadSuccess={this.onDocumentLoadSuccess}\r\n                                  options={{\r\n                                      cMapUrl: `//cdn.jsdelivr.net/npm/pdfjs-dist@${pdfjs.version}/cmaps/`,\r\n                                      cMapPacked: true,\r\n                                  }}\r\n                                  onLoadError={this.onError}\r\n                                  error={<div className=\"error-msg\">{this.state.error}</div>}\r\n                        >\r\n                            {this.getPages()}\r\n                        </Document>\r\n                    </div>\r\n                </main>\r\n                <div id=\"container\" ref={this.setRef('containerRef')}/>\r\n                <div id=\"tagInfo\">\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Document title</div>\r\n                        <div ref={this.setRef('activeTagName')}\r\n                             className={title ? '' : '_empty'}>{title || 'None'}</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Number of pages</div>\r\n                        <div ref={this.setRef('activeTagName')}>{numPages}</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Tag name</div>\r\n                        <div ref={this.setRef('activeTagName')} className=\"_empty\">None</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">Tree path</div>\r\n                        <div ref={this.setRef('tagPath')} className=\"_empty\">None</div>\r\n                    </div>\r\n                    <div className=\"tag-prop\">\r\n                        <div className=\"tag-info-title\">MCID</div>\r\n                        <div ref={this.setRef('mcid')} className=\"_empty\">None</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Default_sample.a5053dd1.pdf\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/STEM_Sample.6e4e83bb.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Det_is_Berlin.ba02e324.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Book_catalog.abc38450.pdf\";","module.exports = __webpack_public_path__ + \"static/media/PDFUA-Reference-03_(Danish_Association-event).dddd5405.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Nutshell.4d676eff.pdf\";"],"sourceRoot":""}